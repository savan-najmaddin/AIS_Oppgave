name: Build and Test

on: [push, workflow_dispatch]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxinerama-dev \
            libxcursor-dev \
            xorg-dev \
            libglu1-mesa-dev \
            pkg-config \
            libglu1-mesa-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install pkg-config

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install pkgconfiglite
          # Install any other dependencies required on Windows

      - name: Configure and build (Linux and macOS)
        if: runner.os != 'Windows'
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Configure and build (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release

      - name: Run tests (Linux and macOS)
        if: runner.os != 'Windows'
        run: |
          cd build
          ctest --output-on-failure

      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd build
          ctest -C Release --output-on-failure
